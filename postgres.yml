---
- name: Install PostgreSQL and configure databases
  hosts: Databases
  become: yes
  collections: ["community.postgresql"]

  
# https://docs.ansible.com/ansible/2.8/modules/postgresql_user_module.html
#  vars:
#    PG_VERSION: 
#    PG_USER: 
#    PG_PASSWORD: 
#    PG_DB:
#    PG_DB_TEST:

  tasks:
    - name: Create directory for pgdg
      file:
        path: /usr/share/postgresql-common/pgdg
        state: directory

    - name: Download apt.postgresql.org.asc
      get_url:
        url: https://www.postgresql.org/media/keys/ACCC4CF8.asc
        dest: /usr/share/postgresql-common/pgdg/apt.postgresql.org.asc

    - name: Add PostgreSQL apt repository
      apt_repository:
        repo: "deb [signed-by=/usr/share/postgresql-common/pgdg/apt.postgresql.org.asc] https://apt.postgresql.org/pub/repos/apt {{ ansible_distribution_release }}-pgdg main"
        state: present

    - name: Update apt cache
      apt:
        update_cache: yes

    - name: Install PostgreSQL
      apt:
        name: "postgresql-{{ PG_VERSION }}"
        state: present
        
    - name: Enable PostgreSQL at startup (systemd)
      systemd:
        name: postgresql
        enabled: yes
      when:
        - ansible_service_mgr == "systemd"
        
    - name: Start PostgreSQL service
      service:
        name: postgresql
        state: started
        
    - name: Install Python Pip
      apt: name=python3-pip update_cache=yes force_apt_get=yes cache_valid_time=3600
      with_items:
      - python-pip
      - python3-pip
      become: true

    - name: Install Python Package
      pip: 
        name: psycopg2-binary
        state: present
        
#    - name: Create new temp database)
#      become_user: "{{ PG_USER }}"
#      register: create_db
  # community.postgresql.postgresql_db:
#      postgresql_db:
#        name: test_db
#        owner: postgres
        
    - name: Create new temp database
      become_user: postgres
      community.postgresql.postgresql_db:
        name: schrdule_test
        owner: postgres
        
    - name: Create PostgreSQL user, set password, grant privs
      become_user: postgres
      community.postgresql.postgresql_user:
 #       db: postgres
        name: "{{ PG_USER }}"
        role_attr_flags: SUPERUSER
        password: "{{ PG_PASSWORD }}"
#        encrypted: yes

    - name: Create new database for APP (schedule)
      become_user: "{{ PG_USER }}"
     # register: create_db
     # community.postgresql.postgresql_db:
      community.postgresql.postgresql_db:
        name: "{{ PG_DB }}"
        owner: "{{ PG_USER }}"
